DROP TABLE ORDERLINE_T;
DROP TABLE PRODUCT_T;
DROP TABLE ORDER_T;
DROP TABLE CUSTOMER_T;
DROP TABLE FL_ORDER_T;
DROP TABLE FL_CUSTOMER_T;
DROP TABLE EMPLOYEE;
DROP FUNCTION get_total;
DROP TABLE Emp_log; 
DROP TABLE EMPLOYEES;
DROP Procedure remove_emp;

CREATE TABLE CUSTOMER_T  (CustomerID NUMBER(11,0) NOT NULL,  CustomerName VARCHAR2(25) NOT NULL,  CustomerAddress VARCHAR2(30),  CustomerCity VARCHAR2(20),  CustomerState VARCHAR2(2),  CustomerPostalCode VARCHAR(10),  CONSTRAINT Customer_PK PRIMARY KEY (CustomerID) ); 
CREATE TABLE ORDER_T  (OrderID NUMBER (11,0) NOT NULL,  OrderDate DATE DEFAULT SYSDATE,  CustomerID NUMBER (11,0),  CONSTRAINT Order_PK PRIMARY KEY (OrderID),  CONSTRAINT Order_FK FOREIGN KEY (CustomerID) REFERENCES 
CUSTOMER_T(CustomerID) );
CREATE TABLE PRODUCT_T  (ProductID NUMBER(11,0) NOT NULL,  ProductDescription VARCHAR2(50),   ProductFinish VARCHAR2(20),  ProductStandardPrice DECIMAL(6,2),  ProductLineID NUMBER(11,0),  CONSTRAINT Product_PK PRIMARY KEY (ProductID) );
CREATE TABLE ORDERLINE_T  (OrderID NUMBER(11,0) NOT NULL,  ProductID NUMBER(11,0) NOT NULL,  OrderedQuantity NUMBER (11,0),  CONSTRAINT OrderLine_PK PRIMARY KEY (OrderID,ProductID),  CONSTRAINT OrderLine_FK1 FOREIGN KEY (OrderID) REFERENCES 
ORDER_T(OrderID),  CONSTRAINT OrderLine_FK2 FOREIGN KEY (ProductID) REFERENCES 
PRODUCT_T(ProductID) ); 

INSERT INTO CUSTOMER_T VALUES(1, 'Contemporary Casuals', '1355 S Hines Blvd', 'Gainesville', 'FL', '32601-2871' ); 
INSERT INTO CUSTOMER_T VALUES(2, 'Value Furniture', '15145 S.W. 17th St.', 'Plano', 'TX', '75094-7743'  ); 
INSERT INTO CUSTOMER_T VALUES(3, 'Home Furnishings', '1900 S Hines Blvd', 'Albany', 'NY', '12209-1125'  ); 
INSERT INTO CUSTOMER_T VALUES(4, 'Eastern Furniture', '1925 Beltline Rd.', 'Carteret', 'NJ', '07008-3188'  ); 
INSERT INTO CUSTOMER_T VALUES(5, 'Impressions', '5585 Westcott Ct.', 'Sacramento', 'CA', '94206-4056'  ); 
INSERT INTO CUSTOMER_T VALUES(6, 'Furniture Gallery', '325 Flatiron Dr.', 'Boulder', 'CO', '80514-4432'  ); 
INSERT INTO CUSTOMER_T VALUES(7, 'Period Furniture', '394 Rainbow Dr.', 'Seattle', 'WA', '97954-5589'  ); 
INSERT INTO CUSTOMER_T VALUES(8, 'California Classics', '816 Peach Rd.', 'Santa Clara', 'CA', '96915-7754'  ); 
INSERT INTO CUSTOMER_T VALUES(9, 'M and H Casual Furniture', '3709 First Street', 'Clearwater', 'FL', '34620-2314'  ); 
INSERT INTO CUSTOMER_T VALUES(10, 'Seminole Interiors', '2400 Rocky Point Dr.', 'Seminole', 'FL', '34646-4432'  ); 
INSERT INTO CUSTOMER_T VALUES(11, 'American Euro Lifestyles', '2424 Missouri Ave N.', 'Prospect Park', 'NJ', '07508-5621'  ); 
INSERT INTO CUSTOMER_T VALUES(12, 'Battle Creek Furniture', '345 Capitol Ave.', 'Battle Creek', 'MI', '49015-3401'  ); 
INSERT INTO CUSTOMER_T VALUES(13, 'Heritage Furnishings', '66789 College Ave.', 'Carlisel', 'PA', '17013-8834'  ); 
INSERT INTO CUSTOMER_T VALUES(14, 'Kaneohe Homes', '112 Kiowai St.', 'Kaneohe', 'HI', '96744-2537'  ); 
INSERT INTO CUSTOMER_T VALUES(15, 'Mountain Scenes', '4132 Main Street', 'Ogden', 'UT', '84403-4432'  ); 

INSERT INTO PRODUCT_T VALUES(1, 'End Table', 'Cherry', 175, 1  ); 
INSERT INTO PRODUCT_T VALUES(2, 'Coffe Table', 'Natural Ash', 200, 2  ); 
INSERT INTO PRODUCT_T VALUES(3, 'Computer Desk', 'Natural Ash', 375, 2  ); 
INSERT INTO PRODUCT_T VALUES(4, 'Entertainment Center', 'Natural Maple', 650, 3  ); 
INSERT INTO PRODUCT_T VALUES(5, 'Writer Desk', 'Cherry', 325, 1  ); 
INSERT INTO PRODUCT_T VALUES(6, '8-Drawer Desk', 'Writel Ash', 750, 2  ); 
INSERT INTO PRODUCT_T VALUES(7, 'Dining Table', 'Natural Ash', 800, 2  ); 
INSERT INTO PRODUCT_T VALUES(8, 'Computer Desk', 'Walnut', 250, 3  ); 

INSERT INTO ORDER_T VALUES(1001, TO_DATE('2010-10-21','YYYY-MM-DD'), '1'  ); 
INSERT INTO ORDER_T VALUES(1002, TO_DATE('2010-10-21','YYYY-MM-DD'), '8'  ); 
INSERT INTO ORDER_T VALUES(1003, TO_DATE('2010-10-22','YYYY-MM-DD'), '15'  ); 
INSERT INTO ORDER_T VALUES(1004, TO_DATE('2010-10-23','YYYY-MM-DD'), '5'  ); 
INSERT INTO ORDER_T VALUES(1005, TO_DATE('2010-10-24','YYYY-MM-DD'), '3'  ); 
INSERT INTO ORDER_T VALUES(1006, TO_DATE('2010-10-24','YYYY-MM-DD'), '2'  ); 
INSERT INTO ORDER_T VALUES(1007, TO_DATE('2010-10-27','YYYY-MM-DD'), '11'  ); 
INSERT INTO ORDER_T VALUES(1008, TO_DATE('2010-10-30','YYYY-MM-DD'), '12'  ); 
INSERT INTO ORDER_T VALUES(1009, TO_DATE('2010-11-5','YYYY-MM-DD'), '4'  ); 
INSERT INTO ORDER_T VALUES(1010, TO_DATE('2010-11-5','YYYY-MM-DD'), '1'  ); 



INSERT INTO ORDERLINE_T VALUES(1001, 1,2  ); 
INSERT INTO ORDERLINE_T VALUES(1001, 2,2  ); 
INSERT INTO ORDERLINE_T VALUES(1001, 4,1  ); 
INSERT INTO ORDERLINE_T VALUES(1002, 3,5  ); 
INSERT INTO ORDERLINE_T VALUES(1003, 3,3  ); 
INSERT INTO ORDERLINE_T VALUES(1004, 6,2  ); 
INSERT INTO ORDERLINE_T VALUES(1004, 8,2  ); 
INSERT INTO ORDERLINE_T VALUES(1005, 4,4  ); 
INSERT INTO ORDERLINE_T VALUES(1006, 4,1  ); 
INSERT INTO ORDERLINE_T VALUES(1006, 5,2  ); 
INSERT INTO ORDERLINE_T VALUES(1006, 7,2  ); 
INSERT INTO ORDERLINE_T VALUES(1007, 1,3  ); 
INSERT INTO ORDERLINE_T VALUES(1007, 2,2  ); 
INSERT INTO ORDERLINE_T VALUES(1008, 3,3  ); 
INSERT INTO ORDERLINE_T VALUES(1008, 8,3  ); 
INSERT INTO ORDERLINE_T VALUES(1009, 4,2  ); 
INSERT INTO ORDERLINE_T VALUES(1009, 7,3  ); 
INSERT INTO ORDERLINE_T VALUES(1010, 8,10  ); 


SELECT * FROM CUSTOMER_T;
SELECT * FROM ORDER_T;
SELECT * FROM PRODUCT_T;
SELECT * FROM ORDERLINE_T;

ALTER TABLE ORDER_T DROP CONSTRAINT ORDER_FK;  
ALTER TABLE ORDER_T ADD CONSTRAINT ORDER_FK FOREIGN KEY 
(CUSTOMERID) REFERENCES CUSTOMER_T(CUSTOMERID) ON DELETE SET NULL; 
DELETE FROM CUSTOMER_T WHERE CUSTOMERID=1; 

INSERT INTO CUSTOMER_T VALUES(1, 'Contemporary Casuals', '1355 S Hines Blvd', 'Gainesville', 'FL', '32601-2871' ); 
UPDATE ORDER_T SET CUSTOMERID=1 WHERE ORDERID = 1001 OR ORDERID=1010;
ALTER TABLE ORDER_T DROP CONSTRAINT ORDER_FK;  
ALTER TABLE ORDER_T ADD CONSTRAINT ORDER_FK FOREIGN KEY (CustomerID) REFERENCES CUSTOMER_T(CustomerID);

ALTER TABLE ORDER_T DROP CONSTRAINT ORDER_FK;  
ALTER TABLE ORDER_T ADD CONSTRAINT ORDER_FK FOREIGN KEY (CUSTOMERID) REFERENCES CUSTOMER_T(CUSTOMERID) ON DELETE CASCADE; 

ALTER TABLE ORDERLINE_T DROP CONSTRAINT ORDERLINE_FK1;  
ALTER TABLE ORDERLINE_T ADD CONSTRAINT ORDERLINE_FK1 FOREIGN KEY 
(ORDERID) REFERENCES ORDER_T(ORDERID) ON DELETE CASCADE;
DELETE FROM CUSTOMER_T WHERE CUSTOMERID=1; 
SELECT * FROM CUSTOMER_T;
SELECT * FROM ORDER_T;  
SELECT * FROM ORDERLINE_T;
INSERT INTO CUSTOMER_T VALUES(1, 'Contemporary Casuals', '1355 S 
Hines Blvd', 'Gainesville', 'FL', '32601-2871') ;
INSERT INTO ORDER_T VALUES(1001, TO_DATE('2010-10-21','YYYY-MM-DD'), '1'  ); 
INSERT INTO ORDER_T VALUES(1010, TO_DATE('2010-11-5','YYYY-MM-DD'), '1'  ); 
INSERT INTO ORDERLINE_T VALUES(1010, 8,10  ); 
INSERT INTO ORDERLINE_T VALUES(1001, 1,2  ); 
INSERT INTO ORDERLINE_T VALUES(1001, 2,2  ); 
INSERT INTO ORDERLINE_T VALUES(1001, 4,1  );
ALTER TABLE ORDER_T DROP CONSTRAINT ORDER_FK;
ALTER TABLE ORDER_T ADD CONSTRAINT ORDER_FK FOREIGN KEY (CustomerID) REFERENCES CUSTOMER_T(CustomerID);
ALTER TABLE ORDERLINE_T DROP CONSTRAINT ORDERLINE_FK1;
  
ALTER TABLE ORDERLINE_T ADD CONSTRAINT ORDERLINE_FK1 FOREIGN KEY (ORDERID) REFERENCES ORDER_T(ORDERID);

CREATE TABLE FL_CUSTOMER_T AS SELECT * FROM CUSTOMER_T WHERE CUSTOMERSTATE='FL';
CREATE TABLE FL_ORDER_T AS SELECT * FROM ORDER_T WHERE CUSTOMERID IN (1,9,10); 

SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE TABLE_NAME='FL_CUSTOMER_T'; 
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE TABLE_NAME='FL_ORDER_T'; 
ALTER TABLE FL_CUSTOMER_T ADD CONSTRAINT FL_CUSTOMER_T_PK PRIMARY KEY (CUSTOMERID); 
ALTER TABLE FL_ORDER_T ADD CONSTRAINT FL_ORDER_T_FK FOREIGN KEY (CUSTOMERID) REFERENCES FL_CUSTOMER_T(CUSTOMERID); 
ALTER TABLE FL_ORDER_T ADD CONSTRAINT FL_ORDER_T_PK PRIMARY KEY (ORDERID); 
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE TABLE_NAME='FL_CUSTOMER_T'; 
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE 
TABLE_NAME='FL_ORDER_T'; 

SELECT CUSTOMER_T.CUSTOMERID, ORDER_T.CUSTOMERID, CUSTOMERNAME, 
ORDERID FROM CUSTOMER_T, ORDER_T WHERE CUSTOMER_T. 
CUSTOMERID=ORDER_T.CUSTOMERID ORDER BY ORDERID; 

SELECT CUSTOMER_T.CUSTOMERID, ORDER_T.CUSTOMERID, CUSTOMERNAME, 
ORDERID FROM CUSTOMER_T INNER JOIN ORDER_T ON CUSTOMER_T. 
CUSTOMERID=ORDER_T.CUSTOMERID ORDER BY ORDERID; 

SELECT CUSTOMERID, CUSTOMERNAME, ORDERID FROM CUSTOMER_T NATURAL JOIN 
ORDER_T ORDER BY CUSTOMERID; 

SELECT CUSTOMER_T.CUSTOMERID, CUSTOMERNAME, 
ORDERID FROM CUSTOMER_T LEFT OUTER JOIN ORDER_T ON 
CUSTOMER_T.CUSTOMERID=ORDER_T.CUSTOMERID;

SELECT CUSTOMER_T.CUSTOMERID, CUSTOMERNAME, ORDERID FROM 
CUSTOMER_T RIGHT OUTER JOIN ORDER_T ON 
CUSTOMER_T.CUSTOMERID=ORDER_T.CUSTOMERID; 

SELECT CUSTOMER_T.CUSTOMERID, CUSTOMERNAME, ORDERID FROM CUSTOMER_T, ORDER_T;         

CREATE TABLE EMPLOYEE 
( 
Employee_ID NUMBER(3,0) NOT NULL,  
FIRST_Name VARCHAR2(15) NOT NULL,  
LAST_Name VARCHAR2(15) NOT NULL,  
EMAIL VARCHAR2(20),  
PHONE_NUMBER VARCHAR2(20),  
HIRE_DATE DATE,  
JOB_ID VARCHAR2(10),  
SALARY NUMBER(8),  
COMMISSION_PCT NUMBER(2,2), 
MANAGER_ID NUMBER(3,0), 
DEPARTMENT_ID NUMBER(3,0), 
CONSTRAINT EMPLOYEES_PK PRIMARY KEY (EMPLOYEE_ID),    
CONSTRAINT EMPLOYEES_FK FOREIGN KEY (MANAGER_ID) REFERENCES 
EMPLOYEE(EMPLOYEE_ID) 
);

INSERT INTO EMPLOYEE VALUES(100, 'Steven', 'King', 'SKING', 
'515.123.4567', '17-Jun-87', 'AD_PRES', 24000, null,null,90) ; 
INSERT INTO EMPLOYEE VALUES(101,'Neena', 'Kochhar', 'NKOCHHAR', 
'515.123.4568', '21-Sep-89', 'AD_VP', 17000,null,100,90 );
INSERT INTO EMPLOYEE VALUES(102,'Lex', 'De Haan', 'LDEHAAN', 
'515.123.4569', '13-Jan-93', 'AD_VP', 17000,null,100,90 );
INSERT INTO EMPLOYEE VALUES(200,'Jennifer', 'Whalen', 'JWHALEN', 
'515.123.4444', '17-Sep-87', 'AD_ASST', 4400,null,101,10 );
INSERT INTO EMPLOYEE VALUES(205,'Shelley', 'Higgins', 'SHIGGINS', 
'515.123.8080', '7-Jun-94', 'AC_MGR', 12000,null,101,110 );
INSERT INTO EMPLOYEE VALUES(206,'William', 'Gietz', 'WGIETZ', 
'515.123.8181', '7-Jun-94', 'AC_ACCOUNT', 8300,null,205,110 );
INSERT INTO EMPLOYEE VALUES(149,'Eleni', 'Zlotkey', 'EZLOTKEY', 
'011.44.1344.429018', '29-Jan-00', 'SA_MAN', 10500,0.2,100,80 );
INSERT INTO EMPLOYEE VALUES(174,'Ellen', 'Abel', 'EABEL', 
'011.44.1644.429267', '11-May-96', 'SA_REP', 11000,0.3,149,80 );
INSERT INTO EMPLOYEE VALUES(176,'Jonathon', 'Taylor', 'JTAYLOR', 
'011.44.1644.429265', '24-Mar-98', 'SA_REP', 8600,0.2,149,80 );
INSERT INTO EMPLOYEE VALUES(178,'Kimberely', 'Grant', 'KGRANT', 
'011.44.1644.429263', '24-May-99', 'SA_REP', 7000,0.15,149,null );
INSERT INTO EMPLOYEE VALUES(124,'Kevin', 'Mourgos', 'KMOURGOS', 
'650.123.5234', '16-Nov-99', 'ST_MAN', 5800,null,100,50 );
INSERT INTO EMPLOYEE VALUES(141,'Trenna', 'Rajs', 'TRAJS', 
'650.121.8009', '17-Oct-95', 'ST_CLERK', 3500,null,124,50 );
INSERT INTO EMPLOYEE VALUES(142,'Curtis', 'Davies', 'CDAVIES', 
'650.121.2994', '29-Jan-97', 'ST_CLERK', 3100,null,124,50 );
INSERT INTO EMPLOYEE VALUES(143,'Randall', 'Matos', 'RMATOS', 
'650.121.2874', '15-Mar-98', 'ST_CLERK', 2600,null,124,50 );
INSERT INTO EMPLOYEE VALUES(144,'Peter', 'Vargas', 'PVARGAS', 
'650.121.2004', '9-Jul-98', 'ST_CLERK', 2500,null,124,50 );
INSERT INTO EMPLOYEE VALUES(103,'Alexander', 'Hunold', 'AHUNOLD', 
'590.423.4567', '3-Jan-90', 'IT_PROG', 9000,null,102,60 );
INSERT INTO EMPLOYEE VALUES(104,'Bruce', 'Ernst', 'BERNST', 
'590.423.4568', '21-May-91', 'IT_PROG', 6000,null,103,60 );
INSERT INTO EMPLOYEE VALUES(107,'Diana', 'Lorentz', 'DLORENTZ', 
'590.423.5567', '7-Feb-99', 'IT_PROG', 4200,null,103,60 );
INSERT INTO EMPLOYEE VALUES(201,'Michael', 'Hartstein', 'MHARTSTE', 
'515.123.5555', '17-Feb-96', 'MK_MAN', 13000,null,100,20 );
INSERT INTO EMPLOYEE VALUES(202,'Pat', 'Fay', 'PFAY', '603.123.6666', 
'17-Aug-97', 'MK_REP', 6000,null,201,20 ); 

CREATE OR REPLACE VIEW view_customer(Customer, City, State, ZIP) AS SELECT customerName, customerCity, customerState,  customerPostalCode from customer_t WHERE customerID<=10; 
SELECT * FROM view_customer; 

CREATE OR REPLACE VIEW view_customer_with_order(Customer, 
OrderID, OrderDate) AS SELECT CustomerName, OrderID, orderDate from 
Customer_t, Order_t WHERE Customer_t.customerid=Order_t.customerid; 
SELECT * FROM view_customer_with_order; 

CREATE OR REPLACE VIEW view_customer_order_summary(Customer, "No of Orders") AS SELECT CustomerName, Count(*) from Customer_t JOIN 
Order_t using (customerid) GROUP BY customerName; 
SELECT * FROM view_customer_order_summary; 

CREATE OR REPLACE VIEW view_customer1(OrderID, OrderDate, customerID) AS SELECT OrderID, OrderDate, customerID from Order_t 
WHERE customerid=1 WITH CHECK OPTION CONSTRAINT view_customer1_check ; 

SELECT * FROM view_customer1; 

CREATE OR REPLACE VIEW view_customer1(OrderID, OrderDate, customerID) AS SELECT OrderID, OrderDate, customerID from Order_t WHERE customerid=1 ; 

UPDATE view_customer1 SET CustomerID=2 WHERE OrderID=1001; 

UPDATE Order_T SET CustomerID=1 WHERE OrderID=1001; 

CREATE OR REPLACE VIEW view_customer2(CustomerName, customerID) 
AS SELECT CustomerName, customerID from Customer_t with READ ONLY; 

CREATE OR REPLACE VIEW view_customer2(CustomerName, customerID) 
AS SELECT CustomerName, customerID from Customer_t; 

UPDATE view_customer2 SET CustomerName='Name Changed' WHERE 
CustomerID=1; 

UPDATE Customer_T SET CustomerName= 'Contemporary Casuals' WHERE 
CustomerID=1; 

SELECT CustomerID, CustomerName FROM Customer_T WHERE 
CustomerID=1;

CREATE OR REPLACE VIEW view_customer3(No, Customer) AS SELECT 
CustomerID, CustomerName FROM Customer_T;

INSERT INTO view_customer3(No, Customer) VALUES (16, 'new 
customer');

UPDATE view_customer3 SET Customer= ('KKK Furniture') WHERE No=16;

DELETE FROM view_customer3 WHERE No=16; 

CREATE OR REPLACE VIEW view_customer4(State, "No. of Customers") 
AS SELECT CustomerState, count(*) FROM Customer_T GROUP BY 
CustomerState; 

DROP view view_customer; 

SELECT ROWNUM AS RANK, OrderDate, OrderID FROM (SELECT OrderDate, OrderID FROM Order_T ORDER BY OrderDate) WHERE ROWNUM<=5; 

CREATE FUNCTION get_total(order_no IN NUMBER)     
RETURN NUMBER     
IS orderedTotal NUMBER(6,0);    
BEGIN        
SELECT sum(orderedquantity)        
INTO orderedTotal        
FROM orderline_t        
WHERE Orderid = order_no;        
RETURN(orderedTotal);      
END; 
/ 

SET SERVEROUTPUT ON

BEGIN 
DBMS_OUTPUT.PUT_LINE ('order_id  ordered_quantity'); 
FOR i IN 1001..1010 LOOP 
DBMS_OUTPUT.PUT_LINE (i||'   '||get_total(i)); 
END LOOP; 
END; 
/ 

CREATE TABLE employees AS (SELECT * FROM employee);

CREATE OR REPLACE TRIGGER t 
  AFTER 
    INSERT OR 
    UPDATE OF salary, department_id OR 
    DELETE 
  ON employees 
BEGIN 
CASE 
WHEN INSERTING THEN 
DBMS_OUTPUT.PUT_LINE('Inserting'); 
WHEN UPDATING('salary') THEN 
DBMS_OUTPUT.PUT_LINE('Updating salary'); 
WHEN UPDATING('department_id') THEN 
DBMS_OUTPUT.PUT_LINE('Updating department ID'); 
WHEN DELETING THEN 
DBMS_OUTPUT.PUT_LINE('Deleting'); 
END CASE; 
END; 
/

SET SERVEROUTPUT ON

DELETE FROM EMPLOYEES WHERE employee_id = 100;

UPDATE employees SET salary = salary - 1000.0; 

UPDATE employees SET salary = salary + 1000.0; 

INSERT INTO employees VALUES(100, 'STEVEN' , 'KING', 'SKING', '515.123.4567', '17-Jun-87', 'AD_PRES', 24000, null,null,90);

CREATE TABLE Emp_log (Emp_id NUMBER,Log_date DATE, New_salary NUMBER, Action VARCHAR2(20)); 

CREATE OR REPLACE TRIGGER log_salary_increase 
  AFTER UPDATE OF salary ON employees 
  FOR EACH ROW 
BEGIN 
  INSERT INTO Emp_log (Emp_id, Log_date, New_salary, Action) 
  VALUES (:NEW.employee_id, SYSDATE, :NEW.salary, 'New Salary'); 
END; 
/
SELECT employee_id, department_id, salary from employees WHERE Department_id = 20; 

UPDATE employees SET salary = salary + 1000.0 WHERE Department_id = 20; 

UPDATE employees SET salary = salary - 1000.0 WHERE Department_id = 20; 

CREATE PROCEDURE remove_emp (employee_id NUMBER) AS    tot_emps NUMBER; 
BEGIN 
DELETE FROM employees 
WHERE employees.employee_id = remove_emp.employee_id;    tot_emps := tot_emps - 1; 
END; 
/ 

CALL remove_emp (100); 

INSERT INTO employees VALUES(100, 'Steven', 'King', 'SKING', '515.123.4567', '17-Jun-87', 'AD_PRES', 24000, null,null,90); 

begin  
SAVEPOINT start_tran; 
delete from employees where department_id=20; 
SAVEPOINT PT1_tran; 
delete from employees where department_id=50; 
SAVEPOINT PT2_tran; 
delete from employees where department_id=60; 
SAVEPOINT PT3_tran; 
delete from employees where department_id=80; 
end; 
/ 
select department_id from employees; 
rollback to PT3_tran; 
rollback to PT2_tran; 
rollback;  

begin  SAVEPOINT start_tran; 
delete from employees where department_id=20; 
SAVEPOINT PT1_tran; co
delete from employees where department_id=50; 
SAVEPOINT PT2_tran; 
delete from employees where department_id=60; 
SAVEPOINT PT3_tran; 
delete from employees where department_id=80; 
end; 
/ 
commit;
select department_id from employees;




